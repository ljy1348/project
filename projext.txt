// IReservation.ts
export default interface IReservation {
    airlineReservationNumber?: any | null, // 예약 번호
    flightName: string,                    // 운항편명
    userId: string,                        // 유저ID
    roundOrOne: string,                    // 왕복 여부
    enName: string,                        // 영문 이름
    departure: string,                     // 출발 일자
    arrival: string,                       // 도착 일자
    operationDay: string,                  // 운항 요일
    airline: string,                       // 항공사
    seatType: string,                      // 좌석 등급
    adultCount: string,                    // 성인 인수
    childCount: string,                    // 소아 인수
    mileUseStatus: string,                 // 마일리지 사용여부
    membershipStatus: string,              // 회원 여부
    domesticInternational: string,         // 국내 - 국제 여부
    startAirport: string,                  // 출발 공항
    finalAirport: string,                  // 도착 공항
}

// IReservation.ts
export default interface IReservation {
    airlineReservationNumber?: any | null, // 예약 번호
    userId: string,                        // 유저ID
    airline: string,                       // 항공사
    departure: string,                     // 출발 일자
    arrival: string,                       // 도착 일자
}


{/* action 버튼 */}
                <td>
                    <Link to={"/search-reservation/" + data.airlineReservationNumber}>
                      <span className="badge bg-success">조회하기</span>
                    </Link>
                  </td>
                  {/* action 버튼 */}



DROP SEQUENCE SQ_BS_RESERVATION;
CREATE SEQUENCE SQ_BS_RESERVATION START WITH 100000 INCREMENT BY 1;

INSERT INTO TB_BS_RESERVATION
VALUES (100000, 'ASN', 'qwe123', 'N', 'KIM', '2023-11-30'
        , '2023-11-30', '목요일', '아시아나', '이코노미', 1, 0
        , 'N', 'N', '국내', '인천', '제주', 'N',SYSDATE, NULL, NULL);

INSERT INTO TB_BS_RESERVATION
VALUES (100001, 'ASN', 'ewq321', 'N', 'JANG', '2023-11-30'
       , '2023-11-30', '목요일', '아시아나', '이코노미', 0, 1
       , 'N', 'N', '국내', '인천', '제주', 'N',SYSDATE, NULL, NULL);




//    1건 상세 조회
    @GetMapping("/search-reservation/{airlineReservationNumber}")
    public ResponseEntity<Object> getReservationNumber(
            @PathVariable String airlineReservationNumber){
        try {
//            상세 조회
            Optional<SearchReservation> optionalSearchReservation = searchReservationService.findByAirlineReservationNumber(airlineReservationNumber);

            if (optionalSearchReservation.isEmpty() == false) {
//                성공
                return new ResponseEntity<>(optionalSearchReservation.get(), HttpStatus.OK);
            } else {
//                데이터 없음
                return new ResponseEntity<>(HttpStatus.NO_CONTENT);
            }

        } catch (Exception e) {
            return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }




